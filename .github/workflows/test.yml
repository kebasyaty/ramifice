name: Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - "wheels/**"
      - "examples/**"
  pull_request:
    branches: [main]
    paths-ignore:
      - "docs/**"
      - "wheels/**"
      - "examples/**"
  # workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.13"]
        poetry-version: ["latest"]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} Python ${{ matrix.python-version }}

    container:
      image: ubuntu:latest
      options: --user root

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file.
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: Install Linux dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          bash .github/workflows/linux-dependencies-install.sh
      - name: Run tests
        run: |
          python -m unittest discover tests/fields

  success:
    permissions:
      contents: none
    needs: build
    runs-on: ubuntu-latest
    name: Test Successful
    steps:
      - name: Success
        run: echo Test Successful

name: Test

on:
  push:
    paths-ignore:
      - "examples/**"
      - ".vscode/**"
      - "assets/**"
      - ".gitignore"
      - "CHANGELOG.md"
      - "README.md"
      - "REQUIREMENTS.md"
  pull_request:
    branches: [main]
    paths-ignore:
      - "examples/**"
      - ".vscode/**"
      - "assets/**"
      - ".gitignore"
      - "CHANGELOG.md"
      - "README.md"
      - "REQUIREMENTS.md"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        mongodb-version: ["8.0"]
        python-version: ["3.12", "3.13"]
        uv-version: ["latest"]
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} Python ${{ matrix.python-version }} MongoDB ${{ matrix.mongodb-version }}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-version: ${{ matrix.mongodb-version }}

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          version: ${{ matrix.uv-version }}
          python-version: ${{ matrix.python-version }}

      - name: Install the project dependencies
        run: uv sync --locked --dev

      - name: Run check
        run: |
          uv run ruff check --config pyproject.toml
          uv run mypy --config-file pyproject.toml

      - name: Run unittest
        run: |
          uv run python -m unittest tests/test_mongo.py
          uv run python -m unittest tests/test_mixins.py
          uv run python -m unittest tests/test_store.py
          uv run python -m unittest tests/test_tools.py
          uv run python -m unittest tests/test_types.py
          uv run python -m unittest discover -s tests/fields
          uv run python -m unittest tests/test_model.py
          uv run python -m unittest tests/test_extra.py
          uv run python -m unittest tests/test_decor_model.py
          uv run python -m unittest tests/test_pseudo_model.py
          uv run python -m unittest tests/test_migration.py
          uv run python -m unittest tests/test_fixtures.py
          uv run python -m unittest discover -s tests/paladins
          uv run python -m unittest discover -s tests/commons
          uv run python -m unittest tests/test_translations.py

  success:
    permissions:
      contents: none
    needs: build
    runs-on: ubuntu-latest
    name: Test Successful
    steps:
      - name: Success
        run: echo Test Successful

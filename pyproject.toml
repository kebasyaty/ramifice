[project]
name = "ramifice"
version = "0.8.27"
description = "ORM-pseudo-like API MongoDB for Python language."
readme = "README.md"
authors = [{ name = "kebasyaty", email = "kebasyaty@gmail.com" }]
license = "MIT"
license-files = ["LICENSE"]
requires-python = ">=3.12,<4.0"
keywords = ["mongo", "mongodb", "pymongo", "orm", "ramifice"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Database",
    "Typing :: Typed",
]
dependencies = [
    "anyio>=4.9.0",
    "argon2-cffi>=25.1.0",
    "babel>=2.17.0",
    "email-validator>=2.2.0",
    "orjson>=3.10.18",
    "phonenumbers>=9.0.6",
    "pillow>=11.2.1",
    "pymongo>=4.13.0",
    "python-dateutil>=2.9.0.post0",
    "python-slugify>=8.0.4",
    "pyyaml>=6.0.2",
    "termcolor>=3.1.0",
    "xloft>=0.1.6",
]

[project.urls]
Homepage = "https://github.com/kebasyaty/ramifice"
Documentation = "https://kebasyaty.github.io/ramifice/"
Repository = "https://github.com/kebasyaty/ramifice"
Source = "https://github.com/kebasyaty/ramifice"
"Bug Tracker" = "https://github.com/kebasyaty/ramifice/issues"
Changelog = "https://github.com/kebasyaty/ramifice/blob/v0/CHANGELOG.md"

[tool.uv]
package = true
default-groups = ["dev", "docs"]
compile-bytecode = true
check-url = "https://pypi.org/simple"

[tool.uv.build-backend]
module-root = "src"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.16.0",
    "pre-commit>=4.3.0",
    "ruff>=0.11.13",
    "types-defusedxml>=0.7.0.20250809",
    "types-pyopenssl>=24.1.0.20240722",
    "types-python-dateutil>=2.9.0.20250516",
    "types-pytz>=2025.2.0.20250809",
    "types-pywin32>=311.0.0.20250809",
    "types-pyyaml>=6.0.12.20250516",
    "types-requests>=2.32.4.20250809",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings[python]>=0.29.1",
    "pymdown-extensions>=10.16.1",
]

[tool.ruff]
fix = true
line-length = 120
indent-width = 4
required-version = ">=0.7.11"
src = ["src", "tests"]
include = ["src/**/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".github",
    "assets",
    "config",
    "docs",
    "examples",
    "public",
    "tests",
]

[tool.ruff.lint]
preview = true
select = [
    "D",    # pydocstyle
    "I",    # isort
    "E",    # flake8-errors
    "W",    # flake8-warnings
    "F",    # flake8-pyflakes
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "S",    # flake8-bandit
    "BLE",  # flake8-blind-except
    "T20",  # flake8-print
    "T10",  # flake8-debugger
    "PT",   # flake8-pytest-style
    "RUF",  # Ruff
    "DTZ",  # flake8-datetimez
    "ERA",  # eradicate
    "FURB", # refurb
]
ignore = [
    "D417",
    "D206",
    "C408",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF022",
    "E722",
    "S110",
]
fixable = ["I"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 100
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
strict = true
show_error_codes = true
pretty = true
files = ["src/**/*.py", "tests/**/*.py"]
disable_error_code = [
    "type-arg",
    "no-any-return",
    "attr-defined",
    "index",
    "operator",
]

[[tool.mypy.overrides]]
module = ["tests.*"]
disable_error_code = [
    "arg-type",
    "no-untyped-def",
    "no-untyped-call",
    "func-returns-value",
    "union-attr",
]
